openapi: 3.0.2
info:
  version: "v1"
  title: "${project.name}"
  description: |
    Wolfram backed visual similiarity based face search. Implemented specifically for the DANER project.
  contact:
    email: "${user.name}@kb.dk"
  license:
    name: "${license.name}"
    url: "${license.url}"
servers:
  #  /api must match servlet-mapping in web.xml
  - url: "/${project.artifactId}/v1"
    description: "Version 1"

paths:
  /ping:
    get:
      tags:
        - "${project.name}"
      summary: Ping the server to check if the server is reachable.
      operationId: ping
      x-useGenericResponse: false # If enabled the method will return Response
      x-streamingOutput: false # If enabled the method will return StreamingOutput.
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal Error
          content:
            text/plain:
              schema:
                type: string

  # https://swagger.io/docs/specification/describing-request-body/file-upload/
  /similarFaces:
    get:
      tags:
        - "${project.name}"
      summary: 'Request images similar to the uploaded image'
      operationId: findSimilarFaces
      parameters:
        - name: imageURL
          in: path
          description: 'URl to the image to use as source for the similarity search'
          required: true
          schema:
            type: string
            example: 'http://example.com/like-a-liik/api/resource/ephemeral/b1690f11-7646-43b2-9911-611c2b427f0e.jpg'
        - name: maxMatches
          in: path
          description: 'The maximum number of similar images to return'
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            example: 10

      responses:
        '200':
          description: 'An array of arrays of image IDs and distances'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimilarResponse'


components:
  schemas:

    SimilarResponse:
      type: object
      required:
        - imageURL
        - faces
      properties:
        imageURL:
          type: string
          description: 'The URL for the source image'
          example: 'http://example.com/like-a-liik/api/resource/ephemeral/b1690f11-7646-43b2-9911-611c2b427f0e.jpg'
        faces:
          type: array
          description: 'The detected faces from the source image'
          items:
            $ref: '#/components/schemas/Face'
        technote:
          type: string
          description: 'Free form technical notes, such as which underlying implementation was used for the match'

    Face:
      type: object
      required:
        - index
        - similars
      properties:
        index:
          type: integer
          format: int32
          description: 'The detected element index, starting from 0'
        boundingBox:
          $ref: '#/components/schemas/BoundingBox'
        similars:
          type: array
          description: 'The images similar to the detected area of the source image'
          items:
            $ref: '#/components/schemas/Similar'

    Similar:
      type: object
      required:
        - distance
        - id
      properties:
        distance:
          type: number
          format: double
          description: 'The similarity distance to the sourceURL, lower values means more similar, 0 is identical'
          example: 0.345
        id:
          type: string
          description: 'The internal ID for the image'
          example: '0473151'

    BoundingBox:
      type: object
      required:
        - x
        - y
        - width
        - height
      properties:
        x:
          type: integer
          description: 'The x coordinate for the bounding box'
        y:
          type: integer
          description: 'The y coordinate for the boundng box. The top of the image is 0'
        width:
          type: integer
          description: 'The width of the bounding box'
        height:
          type: integer
          description: 'The height of the bounding box'


    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
